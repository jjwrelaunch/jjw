#
# This file is part of Ju Jutsu Web (JJW) - a J2EE Ju-Jutsu competition management software.
# Copyright (c) 2010.
# Joerg Boehme / Tino Schlegel
#
# File    : log4j.properties
# Created : 05 Jun 2010
# Last Modified: Sat, 05 Jun 2010 21:02:53
#
# Ju Jutsu Web is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ju Jutsu Web is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ju Jutsu Web.  If not, see <http://www.gnu.org/licenses/>.
#

# This is the configuring for logging displayed in the Application Server
log4j.rootCategory=INFO, stdout, R

# Replace the line above if you want to put a log file into the directory 
# you start Tomcat from
# log4j.rootCategory=INFO, stdout, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=[JJW] %p [%t] %C.%M(%L) | %m%n

log4j.appender.R=org.apache.log4j.RollingFileAppender

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file

log4j.appender.R.File=${catalina.home}/logs/jjw.log

log4j.appender.R.MaxFileSize=1000KB

# Don't keep a backup file
log4j.appender.R.MaxBackupIndex=2

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d [JJW] %p [%t] %C.%M(%L) | %m%n

# Configuration for receiving e-mails when ERROR messages occur.
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
log4j.appender.mail.To=w.net
log4j.appender.mail.From=AppFuse 
log4j.appender.mail.SMTPHost=localhost
log4j.appender.mail.Threshold=ERROR
log4j.appender.mail.BufferSize=1
log4j.appender.mail.Subject=[localhost] jjw Application Error

log4j.appender.mail.layout=org.apache.log4j.PatternLayout
log4j.appender.mail.layout.ConversionPattern=%d  %-5p %c %x - %m%n

# If programmed properly the most messages would be at DEBUG 
# and the least at FATAL.
log4j.logger.de.jjw=DEBUG
log4j.logger.de.jjw.webapp.filter=ERROR
log4j.logger.de.jjw.webapp.listener.UserCounterListener=WARN
log4j.logger.de.jjw.util=WARN

# Control logging for other open source packages
log4j.logger.org.springframework.security=error
log4j.logger.org.apache.commons=ERROR
# Suppress warnings from VariableResolverImpl.resolveVariable
log4j.logger.org.apache.myfaces=WARN
log4j.logger.org.springframework=WARN
log4j.logger.org.tuckey.web.filters=WARN


# All hibernate log output of "info" level or higher goes to stdout.
# For more verbose logging, change the "info" to "debug" on the last line.
log4j.logger.org.hibernate.ps.PreparedStatementCache=WARN
log4j.logger.org.hibernate=WARN

# Changing the log level to DEBUG will result in Hibernate generated
# SQL to be logged.
log4j.logger.org.hibernate.SQL=ERROR

# Changing the log level to DEBUG will result in the PreparedStatement
# bound variable values to be logged.
log4j.logger.org.hibernate.type=ERROR

 


